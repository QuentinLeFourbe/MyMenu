[{"Q:\\Web project\\my-menu\\client\\src\\index.js":"1","Q:\\Web project\\my-menu\\client\\src\\App.js":"2","Q:\\Web project\\my-menu\\client\\src\\AppContext.js":"3","Q:\\Web project\\my-menu\\client\\src\\Reducers\\Reducers.js":"4","Q:\\Web project\\my-menu\\client\\src\\components\\About.jsx":"5","Q:\\Web project\\my-menu\\client\\src\\components\\Register.jsx":"6","Q:\\Web project\\my-menu\\client\\src\\components\\Authentification.jsx":"7","Q:\\Web project\\my-menu\\client\\src\\components\\Header.jsx":"8","Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealsManagement.jsx":"9","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuManagerComponent.jsx":"10","Q:\\Web project\\my-menu\\client\\src\\Constant.js":"11","Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealCreationForm.jsx":"12","Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealList.jsx":"13","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\FloatingMealManager\\FloatingMealManager.jsx":"14","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\WeeksNavBar\\WeeksNavBar.jsx":"15","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\FloatingMealManager\\FiltersComponent.jsx":"16","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\DaysContainer.jsx":"17","Q:\\Web project\\my-menu\\client\\src\\api\\index.js":"18","Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealEditForm.jsx":"19","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\FloatingMealManager\\FloatingMealList.jsx":"20","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\Day.jsx":"21","Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\FormTextInput.jsx":"22","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\Meal.jsx":"23","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\Menu.jsx":"24"},{"size":160,"mtime":1616858349999,"results":"25","hashOfConfig":"26"},{"size":2357,"mtime":1617265369517,"results":"27","hashOfConfig":"26"},{"size":76,"mtime":1616858349993,"results":"28","hashOfConfig":"26"},{"size":2731,"mtime":1617280269363,"results":"29","hashOfConfig":"26"},{"size":158,"mtime":1616858349994,"results":"30","hashOfConfig":"26"},{"size":159,"mtime":1616858349997,"results":"31","hashOfConfig":"26"},{"size":178,"mtime":1616858349994,"results":"32","hashOfConfig":"26"},{"size":1078,"mtime":1616858349994,"results":"33","hashOfConfig":"26"},{"size":2683,"mtime":1617283500425,"results":"34","hashOfConfig":"26"},{"size":9000,"mtime":1617269097540,"results":"35","hashOfConfig":"26"},{"size":250,"mtime":1617273784319,"results":"36","hashOfConfig":"26"},{"size":4330,"mtime":1616858349995,"results":"37","hashOfConfig":"26"},{"size":1987,"mtime":1617283113650,"results":"38","hashOfConfig":"26"},{"size":2202,"mtime":1617281258323,"results":"39","hashOfConfig":"26"},{"size":2712,"mtime":1617265325718,"results":"40","hashOfConfig":"26"},{"size":2338,"mtime":1617282180454,"results":"41","hashOfConfig":"26"},{"size":1070,"mtime":1616858349996,"results":"42","hashOfConfig":"26"},{"size":1235,"mtime":1616858349994,"results":"43","hashOfConfig":"26"},{"size":6945,"mtime":1616858349995,"results":"44","hashOfConfig":"26"},{"size":3360,"mtime":1617269662887,"results":"45","hashOfConfig":"26"},{"size":1149,"mtime":1616858349996,"results":"46","hashOfConfig":"26"},{"size":1829,"mtime":1616858349994,"results":"47","hashOfConfig":"26"},{"size":1934,"mtime":1617269136565,"results":"48","hashOfConfig":"26"},{"size":2811,"mtime":1617269110380,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"10kgs8u",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Q:\\Web project\\my-menu\\client\\src\\index.js",[],["101","102"],"Q:\\Web project\\my-menu\\client\\src\\App.js",["103"],"Q:\\Web project\\my-menu\\client\\src\\AppContext.js",[],"Q:\\Web project\\my-menu\\client\\src\\Reducers\\Reducers.js",[],"Q:\\Web project\\my-menu\\client\\src\\components\\About.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\Register.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\Authentification.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\Header.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealsManagement.jsx",["104","105"],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuManagerComponent.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\Constant.js",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealCreationForm.jsx",["106"],"import React, { useContext } from 'react'\r\nimport { createMeal, fetchMeals } from '../../api';\r\nimport { AppContext } from '../../AppContext';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form'\r\n//#region styled css\r\n\r\n\r\nconst Container = styled.form`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: flex-start;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: #dee2e6;\r\n    border-radius: 1rem;\r\n    margin: 1rem;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    margin: 0.5rem 1rem 0.5rem 0rem;\r\n    font-size: 1rem;\r\n`;\r\n\r\nconst TextInput = styled.input`\r\n    padding: 0.5rem;\r\n    border-radius: 1rem;\r\n    border: none;\r\n    background-color: #f3f3f5;border-radius: 1rem;\r\n\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n    padding: 0.5rem;\r\n\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n    background-color: #ff6f61;\r\n    color: #fff;\r\n    border: none;\r\n    max-width: 200px;\r\n    max-height: 50px;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    padding: 10px 20px;\r\n    display: inline-block;\r\n    border-radius: 100px;\r\n    transition: all .2s;\r\n    position: relative;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        height: 100%;\r\n        width: 100%;\r\n        border-radius: 100px;\r\n        transition: all .4s;\r\n        background-color: #ff6f61;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: -1;\r\n    }\r\n\r\n    &:hover{\r\n        transform: translateY(-3px);\r\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &:hover::after {\r\n        transform: scaleX(1.4) scaleY(1.6);\r\n        opacity: 0;\r\n}\r\n\r\n    :active {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\r\n    }\r\n   \r\n`;\r\n\r\nconst RecipeArea = styled.textarea`\r\n    resize: none;\r\n    margin: 0rem 0rem 1rem 0rem;\r\n    padding: 0.5rem;\r\n    border-radius: 1rem;\r\n    border: none;\r\n    background-color: #f3f3f5;border-radius: 1rem;\r\n`;\r\n\r\nconst InlineDiv = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n`;\r\n\r\n//#endregion\r\n\r\nfunction MealCreationForm() {\r\n\r\n    const { register, handleSubmit } = useForm()\r\n\r\n    const context = useContext(AppContext);\r\n    const { dataDispatch } = context;\r\n\r\n    const saveMeal = async (data) => {\r\n\r\n        const meal = { ...data, mealImage: data.mealImage[0] };\r\n   \r\n        var formData = new FormData();\r\n        for (var key in meal) {\r\n            formData.append(key, meal[key]);\r\n        }\r\n\r\n        await createMeal(formData)\r\n            .then(() => {\r\n                dataDispatch({ type: 'CREATE_MEALS', payload: formData })\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error: \" + error.message)\r\n            })\r\n\r\n        await fetchMeals().then(response => {\r\n            dataDispatch({ type: 'FETCH_MEALS', payload: response.data })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container onSubmit={handleSubmit(saveMeal)}>\r\n            <h2>Créer une nouvelle recette !</h2>\r\n            <Label htmlFor=\"name\">Nom du plat</Label>\r\n            <TextInput\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"ingredients\">Liste des ingrédients</Label>\r\n            <TextInput\r\n                id=\"ingredients\"\r\n                name=\"ingredients\"\r\n                type=\"text\"\r\n                ref={register}\r\n            />\r\n\r\n            <Label htmlFor=\"recipe\">Recette</Label>\r\n            <RecipeArea\r\n                id=\"recipe\"\r\n                name=\"recipe\"\r\n                rows=\"5\"\r\n                cols=\"30\"\r\n                placeholder=\"Entrez ici votre recette !\"\r\n                ref={register}\r\n            />\r\n            <InlineDiv>\r\n                <Label>Image</Label>\r\n                <FileInput\r\n                    id=\"mealImage\"\r\n                    name=\"mealImage\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    ref={register}\r\n                />\r\n            </InlineDiv>\r\n\r\n            <FormButton type=\"submit\" >Créer la recette</FormButton>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default MealCreationForm\r\n","Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealList.jsx",["107","108"],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\FloatingMealManager\\FloatingMealManager.jsx",["109"],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\WeeksNavBar\\WeeksNavBar.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\FloatingMealManager\\FiltersComponent.jsx",["110","111","112","113","114"],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\DaysContainer.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\api\\index.js",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\MealEditForm.jsx",["115","116","117"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { updateMeal, fetchMeals, deleteMeal } from '../../api';\r\nimport { AppContext } from '../../AppContext';\r\nimport FormTextInput from './FormTextInput';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Overlay = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: ${props => props.show ? 'block' : 'none'};\r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgb(0,0,0);\r\n    background-color: rgba(50,50,50, 0.8);\r\n    z-index: 2;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    background-color: white;\r\n    border-radius: 50px;\r\n    z-index: 2;\r\n    margin: 1rem 4rem;\r\n    display:flex;\r\n    flex-flow:column nowrap;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    display:flex;\r\n    flex-flow: column wrap;\r\n    padding: 2rem;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    margin: 0rem 1rem;\r\n\r\n    &.dataLabel{\r\n        margin: 0rem 1rem 1rem 1rem;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst LabelsContainer = styled.div`\r\n    display:flex;\r\n    flex-flow: column wrap;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n    border:none;\r\n    height:45px;\r\n    background-color: transparent;\r\n    margin: 3rem 0rem 0rem 3rem;\r\n    padding: 0;\r\n    color:white;\r\n\r\n    &:hover{\r\n        background-color:white;\r\n        color:black;\r\n        border-radius: 100px;\r\n    }\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n    padding: 0.5rem;\r\n\r\n`;\r\n\r\nconst MealBanner = styled.div`\r\n    min-height: 150px;\r\n    border-radius: 1rem 1rem 0rem 0rem;\r\n    background-size: cover;\r\n    background-image: url('http://localhost:5000/${props => props.image}');\r\n    background-position: center; \r\n    flex-grow:1;\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n    background-color: #ff6f61;\r\n    color: #fff;\r\n    border: none;\r\n    max-width: 200px;\r\n    max-height: 50px;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    padding: 10px 20px;\r\n    display: inline-block;\r\n    border-radius: 100px;\r\n    transition: all .2s;\r\n    position: relative;\r\n\r\n    &::after {\r\n        content: \"\";\r\n        height: 100%;\r\n        width: 100%;\r\n        border-radius: 100px;\r\n        transition: all .4s;\r\n        background-color: #ff6f61;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: -1;\r\n    }\r\n\r\n    &:hover{\r\n        transform: translateY(-3px);\r\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &:hover::after {\r\n        transform: scaleX(1.4) scaleY(1.6);\r\n        opacity: 0;\r\n}\r\n\r\n    :active {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &.delete{\r\n        background-color: grey;\r\n            &::after {\r\n            content: \"\";\r\n            height: 100%;\r\n            width: 100%;\r\n            border-radius: 100px;\r\n            transition: all .4s;\r\n            background-color: grey;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            z-index: -1;\r\n        }\r\n    }\r\n\r\n    &.right{\r\n        margin-left: auto;\r\n    }\r\n   \r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n display: flex;\r\n flex-flow: row wrap;\r\n\r\n`;\r\n\r\nfunction MealEditForm(props) {\r\n    //Props\r\n    const { mealId, show, hideFunc } = props;\r\n    //Context\r\n    const context = useContext(AppContext);\r\n    const { dataDispatch } = context;\r\n    //State\r\n    const [formImage, setFormImage] = useState('');\r\n    // const emptyMealState = { name: '', ingredients: '', recipe: '' }\r\n\r\n    //React hook form\r\n    const { register, reset, handleSubmit, watch, setValues } = useForm();\r\n\r\n    useEffect(async () => {\r\n        if (mealId === \"\") {\r\n            reset();\r\n            return;\r\n        }\r\n\r\n        await axios.get(`http://localhost:5000/meals/${mealId}`)\r\n            .then(response => {\r\n                let mealEdited = response.data[0];\r\n                setFormImage(mealEdited.mealImage);\r\n                reset({ ...mealEdited, mealImage: '' }); //Empty mealImage so it does not load the path in file Input and crash\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error: \" + error.message)\r\n            });\r\n\r\n\r\n    }, [mealId]);\r\n\r\n    const onSubmit = async (data) => {\r\n        const meal = { ...data };\r\n        if (data.mealImage.length > 0) {\r\n            meal.mealImage = data.mealImage[0]\r\n        } else {\r\n            console.log(delete meal.mealImage);\r\n        }\r\n        console.log(meal);\r\n\r\n        var formData = new FormData();\r\n        for (var key in meal) {\r\n            formData.append(key, meal[key]);\r\n        }\r\n        await updateMeal(mealId, formData)\r\n            .then(() => {\r\n                dataDispatch({ type: 'UPDATE_MEALS', payload: formData })\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error: \" + error.message)\r\n            })\r\n\r\n        await fetchMeals().then(response => {\r\n            dataDispatch({ type: 'FETCH_MEALS', payload: response.data })\r\n        })\r\n\r\n        hideFunc();\r\n    }\r\n\r\n    const onDelete = async () => {\r\n        await deleteMeal(mealId).then(()  => {\r\n            dataDispatch({type: 'DELETE_MEAL', payload: mealId})\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error: \" + error.message)\r\n        });\r\n\r\n        await fetchMeals().then(response => {\r\n            dataDispatch({ type: 'FETCH_MEALS', payload: response.data })\r\n        });\r\n\r\n        hideFunc();\r\n    }\r\n\r\n    return (\r\n        <Overlay show={show} >\r\n            <CloseButton onClick={hideFunc}><CloseIcon style={{ fontSize: 45 }} /></CloseButton>\r\n            <Container>\r\n                <MealBanner image={formImage} />\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <FormTextInput label=\"Nom\" name=\"name\" register={register} watch={watch} />\r\n                    <FormTextInput label=\"Ingrédients\" name=\"ingredients\" register={register} watch={watch} />\r\n                    <FormTextInput label=\"Recette\" name=\"recipe\" register={register} watch={watch} />\r\n\r\n                    <LabelsContainer>\r\n                        <Label>Image</Label>\r\n                        <FileInput\r\n                            id=\"mealImage\"\r\n                            name=\"mealImage\"\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            ref={register}\r\n                        />\r\n                    </LabelsContainer>\r\n                    <ButtonContainer>\r\n                        <FormButton type=\"submit\">Modifier</FormButton>\r\n                        <FormButton className=\"delete right\" type=\"button\" onClick={() => onDelete()}>Supprimer</FormButton>\r\n                    </ButtonContainer>\r\n\r\n                </Form>\r\n            </Container>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nexport default MealEditForm\r\n","Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\FloatingMealManager\\FloatingMealList.jsx",["118","119"],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\Day.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MealManagement\\FormTextInput.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\Meal.jsx",[],"Q:\\Web project\\my-menu\\client\\src\\components\\MenuManager\\MenuComponents\\Menu.jsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":45,"column":13,"nodeType":"126","endLine":53,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":23,"column":7,"nodeType":"129","messageId":"130","endLine":23,"endColumn":23},{"ruleId":"124","severity":1,"message":"131","line":77,"column":8,"nodeType":"132","endLine":77,"endColumn":25,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"134","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":13},{"ruleId":"127","severity":1,"message":"135","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"136","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"137","line":75,"column":8,"nodeType":"132","endLine":75,"endColumn":25,"suggestions":"138"},{"ruleId":"127","severity":1,"message":"139","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"140","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":17},{"ruleId":"127","severity":1,"message":"141","line":37,"column":7,"nodeType":"129","messageId":"130","endLine":37,"endColumn":21},{"ruleId":"127","severity":1,"message":"142","line":41,"column":7,"nodeType":"129","messageId":"130","endLine":41,"endColumn":18},{"ruleId":"127","severity":1,"message":"143","line":43,"column":7,"nodeType":"129","messageId":"130","endLine":43,"endColumn":17},{"ruleId":"127","severity":1,"message":"144","line":163,"column":51,"nodeType":"129","messageId":"130","endLine":163,"endColumn":60},{"ruleId":"124","severity":1,"message":"125","line":165,"column":15,"nodeType":"126","endLine":182,"endColumn":6},{"ruleId":"124","severity":1,"message":"145","line":182,"column":8,"nodeType":"132","endLine":182,"endColumn":16,"suggestions":"146"},{"ruleId":"127","severity":1,"message":"136","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":27},{"ruleId":"127","severity":1,"message":"147","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":20},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'ingredientsDispo' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array. You can also do a functional update 'setFilterData(f => ...)' if you only need 'filterData' in the 'setFilterData' call.","ArrayExpression",["150"],"'axios' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["151"],"'useEffect' is defined but never used.","'useForm' is defined but never used.","'RadioContainer' is assigned a value but never used.","'RadioButton' is assigned a value but never used.","'RadioLabel' is assigned a value but never used.","'setValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["152"],"'AppContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [dataState.meals, filterData]",{"range":"159","text":"160"},"Update the dependencies array to be: [data, dataState.meals]",{"range":"161","text":"162"},"Update the dependencies array to be: [mealId, reset]",{"range":"163","text":"164"},[2164,2181],"[dataState.meals, filterData]",[1866,1883],"[data, dataState.meals]",[4274,4282],"[mealId, reset]"]